import { useState } from "react";
import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "@/styles/Home.module.css";
import { useForm } from "react-hook-form";
import axios from "axios";
import toast from "react-hot-toast";

export default function Home() {
  const [loading, setLoading] = useState(false);
  const {
    register,
    handleSubmit,
    watch,
    formState: { errors },
  }: any = useForm();

  const onSubmit = async (data: any) => {
    try {
      setLoading(true);
      console.log(data);
      const create = await axios.post("http://localhost:5000/onboard", data);
      console.log("create: ", create);
      toast.success("Details submitted!");
      setLoading(false);
    } catch (err) {
      setLoading(false);
      console.log(err);
      toast.error("Error in submission");
    }
  };
  console.log("errors", errors);

  return (
    <>
      <Head>
        <title>Travelopia</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <form
          onSubmit={handleSubmit(onSubmit)}
          className="grid grid-cols-1 gap-2"
        >
          <div className={styles.description}>
            <p className="text-lg font-bold">Travelopia form&nbsp;</p>
          </div>
          <div className="flex flex-col">
            <label htmlFor="name">Name</label>
            <input
              type="text"
              id="name"
              {...register("name", { required: "Name is required" })}
            />
            {errors?.name?.message && (
              <p className="italic text-sm text-red-400">
                *{errors?.name?.message}
              </p>
            )}
          </div>
          <div className="flex flex-col">
            <label htmlFor="email">Email</label>
            <input
              type="email"
              id="email"
              {...register("email", { required: "Email is required" })}
            />
            {errors?.email?.message && (
              <p className="italic text-sm text-red-400">
                *{errors?.email?.message}
              </p>
            )}
          </div>
          <div className="flex flex-col">
            <label htmlFor="destination">Where do you want to go?</label>
            <select
              id="destination"
              {...register("destination", {
                required: "Destination is required",
              })}
            >
              <option value="india">India</option>
              <option value="africa">Africa</option>
              <option value="europe">Europe</option>
            </select>
            {errors?.destination?.message && (
              <p className="italic text-sm text-red-400">
                *{errors?.destination?.message}
              </p>
            )}
          </div>
          <div className="flex flex-col">
            <label htmlFor="noOfTravellers">No. of travellers</label>
            <input
              type="number"
              id="noOfTravellers"
              {...register("noOfTravellers", {
                required: "No. of travellers are required",
              })}
            />
            {errors?.noOfTravellers?.message && (
              <p className="italic text-sm text-red-400">
                *{errors?.noOfTravellers?.message}
              </p>
            )}
          </div>
          <div className="flex flex-col">
            <label htmlFor="budget">Budget per person(in dollars)</label>
            <input
              type="number"
              id="budget"
              {...register("budget", { required: "Budget is required" })}
            />
            {errors?.budget?.message && (
              <p className="italic text-sm text-red-400">
                *{errors?.budget?.message}
              </p>
            )}
          </div>

          <button disabled={loading} type="submit">
            {loading ? "...loading" : "Submit"}
          </button>
        </form>
      </main>
    </>
  );
}
